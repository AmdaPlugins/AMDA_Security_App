@echo off
REM === Ir al proyecto ===
cd /d C:\AmdaOps

REM === Crear/Actualizar README.md con contenido ===
(
echo # üèóÔ∏è AmdaOps ‚Äî Plataforma Modular de Operaciones
echo.
echo **AmdaOps** es una arquitectura operativa dise√±ada para gestionar m√∫ltiples sitios (^**ShoppingCenter^**, ^**Warehouse^**, ^**Parking^**, etc.)  
echo de forma **segura, escalable y colaborativa**. Su estructura modular permite reutilizar componentes, mantener trazabilidad y  
echo facilitar el despliegue en entornos reales.
echo.
echo ---
echo.
echo ## üìÇ Estructura del proyecto
echo.
echo ^```plaintext
echo AmdaOps/
echo ‚îú‚îÄ‚îÄ shared/              # M√≥dulos comunes reutilizables
echo ‚îÇ   ‚îú‚îÄ‚îÄ loader.py
echo ‚îÇ   ‚îú‚îÄ‚îÄ registry.py
echo ‚îÇ   ‚îî‚îÄ‚îÄ phrase.py
echo ‚îú‚îÄ‚îÄ ShoppingCenter/      # M√≥dulo operativo actual
echo ‚îÇ   ‚îú‚îÄ‚îÄ formulario/
echo ‚îÇ   ‚îú‚îÄ‚îÄ data/
echo ‚îÇ   ‚îú‚îÄ‚îÄ streamlit_app/
echo ‚îÇ   ‚îî‚îÄ‚îÄ tests/
echo ‚îú‚îÄ‚îÄ Idea/                # Prototipos y exploraciones
echo ‚îú‚îÄ‚îÄ docs/                # Documentaci√≥n t√©cnica
echo ‚îú‚îÄ‚îÄ venv/                # Entorno virtual (excluido del repo)
echo ‚îî‚îÄ‚îÄ README.md
echo ^```
echo.
echo ---
echo.
echo ## üß© Componentes Compartidos (^`shared/^`)
echo.
echo - **loader.py** ‚Üí Carga y validaci√≥n de estructuras de datos  
echo - **registry.py** ‚Üí Registro de m√≥dulos y configuraci√≥n din√°mica  
echo - **phrase.py** ‚Üí Gesti√≥n de frases y textos biling√ºes  
echo.
echo Estos m√≥dulos se comparten entre todos los sitios operativos, garantizando **coherencia** y **mantenimiento centralizado**.
echo.
echo ---
echo.
echo ## üè¨ M√≥dulo ^`ShoppingCenter^`
echo.
echo Contiene:  
echo - **formulario/** ‚Üí Formularios principales  
echo - **data/** ‚Üí Datos simulados  
echo - **streamlit_app/** ‚Üí Interfaz visual  
echo - **tests/** ‚Üí Pruebas unitarias  
echo.
echo Est√° dise√±ado para ser el **primer sitio operativo** y servir como **plantilla** para futuros m√≥dulos:
echo.
echo ^```plaintext
echo AmdaOps/
echo ‚îú‚îÄ‚îÄ Warehouse/
echo ‚îú‚îÄ‚îÄ Parking/
echo ‚îú‚îÄ‚îÄ DeliveryHub/
echo ^```
echo.
echo Cada sitio puede tener su propio ^`formulario/^`, ^`data/^`, ^`tests/^`, y reutilizar los m√≥dulos de ^`shared/^`.
echo.
echo ---
echo.
echo ## üöÄ Objetivos
echo.
echo - Consolidar la **base modular** con componentes compartidos  
echo - Validar la **estructura de datos** antes de avanzar  
echo - Preparar el sistema para **producci√≥n** y uso real por equipos operativos  
echo.
echo ---
echo.
echo ## üìÑ Documentaci√≥n
echo.
echo Toda decisi√≥n arquitect√≥nica, convenciones de nombres y estructura de carpetas se documenta en:  
echo.
echo ^`docs/estructura.md^`
echo.
echo ---
echo.
echo ## ‚ö° Instalaci√≥n r√°pida
echo.
echo Clona el repositorio e instala las dependencias en un entorno virtual:
echo.
echo ^```bash
echo # Clonar el repositorio
echo git clone https://github.com/AmdaPlugins/AmdaOps.git
echo cd AmdaOps
echo.
echo # Crear y activar un entorno virtual
echo python -m venv venv
echo # En Linux/Mac
echo source venv/bin/activate
echo # En Windows (PowerShell)
echo venv\Scripts\Activate.ps1
echo.
echo # Instalar dependencias
echo pip install -r requirements.txt
echo ^```
echo.
echo Ejecutar la aplicaci√≥n principal (ejemplo con Streamlit):
echo.
echo ^```bash
echo streamlit run ShoppingCenter/streamlit_app/app.py
echo ^```
echo.
echo ---
echo.
echo ## ü§ù Colaboraci√≥n
echo.
echo Este proyecto est√° abierto a **mejoras, sugerencias y extensiones**.  
echo Se prioriza la **claridad**, la **modularidad** y la **experiencia de usuario sin fricciones**.
) > README.md

REM === Subir cambios a GitHub ===
git add README.md
git commit -m "Actualizaci√≥n autom√°tica README.md"
git push

echo.
echo ‚úÖ README.md actualizado y subido a GitHub
pause
